import streamlit as st
from database import (
    init_db, l√§gg_till_bolag, hamta_alla_bolag,
    uppdatera_bolag, ta_bort_bolag
)
import os

# Initiera databasen
init_db()

st.set_page_config(page_title="Aktieanalys med P/S-tal", layout="wide")
st.title("üìà Aktieanalys med P/S-tal")

# Formul√§r: L√§gg till nytt bolag
st.header("L√§gg till nytt bolag")
with st.form("nytt_bolag_formul√§r", clear_on_submit=True):
    bolagsnamn = st.text_input("Bolagsnamn")
    nuvarande_kurs = st.number_input("Nuvarande kurs", format="%.2f")
    oms√§ttning_√•r = st.number_input("F√∂rv√§ntad oms√§ttning i √•r (MSEK)", format="%.0f")
    oms√§ttning_n√§sta_√•r = st.number_input("F√∂rv√§ntad oms√§ttning n√§sta √•r (MSEK)", format="%.0f")
    antal_aktier = st.number_input("Antal utest√•ende aktier (miljoner)", format="%.2f")
    ps1 = st.number_input("P/S 1", format="%.2f")
    ps2 = st.number_input("P/S 2", format="%.2f")
    ps3 = st.number_input("P/S 3", format="%.2f")
    ps4 = st.number_input("P/S 4", format="%.2f")
    ps5 = st.number_input("P/S 5", format="%.2f")
    skicka = st.form_submit_button("L√§gg till bolag")

    if skicka:
        l√§gg_till_bolag(
            bolagsnamn, nuvarande_kurs, oms√§ttning_√•r,
            oms√§ttning_n√§sta_√•r, antal_aktier, ps1, ps2, ps3, ps4, ps5
        )
        st.success(f"Bolaget {bolagsnamn} har lagts till.")

# H√§mta bolag och sortera
alla_bolag = hamta_alla_bolag()

def ber√§kna_pot_kurser(bolag):
    genomsnitt_ps = sum(bolag[6:11]) / 5
    pot_kurs_idag = (bolag[3] / bolag[5]) * genomsnitt_ps if bolag[5] != 0 else 0
    pot_kurs_slut√•ret = (bolag[4] / bolag[5]) * genomsnitt_ps if bolag[5] != 0 else 0
    √∂verv√§rdering_idag = ((pot_kurs_idag - bolag[2]) / bolag[2]) * 100 if bolag[2] != 0 else 0
    √∂verv√§rdering_slut√•ret = ((pot_kurs_slut√•ret - bolag[2]) / bolag[2]) * 100 if bolag[2] != 0 else 0
    return pot_kurs_idag, pot_kurs_slut√•ret, √∂verv√§rdering_idag, √∂verv√§rdering_slut√•ret

# Sortera bolag utifr√•n mest underv√§rderad baserat p√• slut√•rets potentiella kurs
alla_bolag.sort(key=lambda x: ber√§kna_pot_kurser(x)[3], reverse=True)

# Visa tabell
st.header("üìä √ñversikt √∂ver bolag")
for index, bolag in enumerate(alla_bolag):
    pot_kurs_idag, pot_kurs_slut√•ret, √∂ver_idag, √∂ver_slut = ber√§kna_pot_kurser(bolag)

    f√§rg = "üü¢" if pot_kurs_slut√•ret > bolag[2] else "üî¥"

    with st.expander(f"{f√§rg} {bolag[1]} ‚Äì Nuvarande kurs: {bolag[2]:.2f} kr"):
        st.write(f"**F√∂rv√§ntad oms√§ttning i √•r:** {bolag[3]:,.0f} MSEK")
        st.write(f"**F√∂rv√§ntad oms√§ttning n√§sta √•r:** {bolag[4]:,.0f} MSEK")
        st.write(f"**Antal aktier:** {bolag[5]:,.2f} miljoner")
        st.write(f"**P/S-tal (1‚Äì5):** {', '.join([str(round(p,2)) for p in bolag[6:11]])}")
        st.write(f"**Potentiell kurs idag:** {pot_kurs_idag:.2f} kr ({√∂ver_idag:.1f}%)")
        st.write(f"**Potentiell kurs slutet av √•ret:** {pot_kurs_slut√•ret:.2f} kr ({√∂ver_slut:.1f}%)")

        # Redigera formul√§r
        with st.form(f"redigera_{index}"):
            ny_kurs = st.number_input("Ny nuvarande kurs", value=float(bolag[2]), format="%.2f")
            ny_oms_√•r = st.number_input("Ny oms√§ttning i √•r", value=float(bolag[3]), format="%.0f")
            ny_oms_n√§sta = st.number_input("Ny oms√§ttning n√§sta √•r", value=float(bolag[4]), format="%.0f")
            ny_aktier = st.number_input("Nytt antal aktier", value=float(bolag[5]), format="%.2f")
            ny_ps = [
                st.number_input(f"Nytt P/S {i+1}", value=float(bolag[6+i]), format="%.2f")
                for i in range(5)
            ]
            √§ndra = st.form_submit_button("Spara √§ndringar")
            if √§ndra:
                uppdatera_bolag(bolag[0], ny_kurs, ny_oms_√•r, ny_oms_n√§sta, ny_aktier, *ny_ps)
                st.success("√Ñndringar sparade.")
                st.session_state["uppdaterad"] = True

        # Radera bolag
        if st.button(f"Ta bort {bolag[1]}", key=f"ta_bort_{index}"):
            ta_bort_bolag(bolag[0])
            st.success(f"{bolag[1]} har tagits bort.")
            st.session_state["uppdaterad"] = True

# Om n√•got uppdaterats, ladda om sidan
if "uppdaterad" in st.session_state:
    del st.session_state["uppdaterad"]
    st.experimental_rerun()
