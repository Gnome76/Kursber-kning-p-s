import streamlit as st
from database import (
    initiera_databas,
    l√§gg_till_bolag,
    h√§mta_alla_bolag,
    uppdatera_bolag,
    ta_bort_bolag,
)

st.set_page_config(page_title="Aktieanalys", layout="wide")
initiera_databas()

st.title("üìä Aktieanalys baserat p√• P/S-tal")

st.header("‚ûï L√§gg till nytt bolag")
with st.form("l√§gg_till_form"):
    kol1, kol2 = st.columns(2)

    with kol1:
        bolagsnamn = st.text_input("Bolagsnamn")
        nuvarande_kurs = st.number_input("Nuvarande kurs", min_value=0.0, value=100.0)
        oms√§ttning_i_√•r = st.number_input("F√∂rv√§ntad oms√§ttning i √•r", min_value=0.0)
        oms√§ttning_n√§sta_√•r = st.number_input("F√∂rv√§ntad oms√§ttning n√§sta √•r", min_value=0.0)

    with kol2:
        antal_aktier = st.number_input("Antal utest√•ende aktier", min_value=1)
        ps1 = st.number_input("P/S-tal 1", min_value=0.0, value=5.0)
        ps2 = st.number_input("P/S-tal 2", min_value=0.0, value=5.0)
        ps3 = st.number_input("P/S-tal 3", min_value=0.0, value=5.0)
        ps4 = st.number_input("P/S-tal 4", min_value=0.0, value=5.0)
        ps5 = st.number_input("P/S-tal 5", min_value=0.0, value=5.0)

    submitted = st.form_submit_button("Spara bolag")

    if submitted:
        l√§gg_till_bolag(
            bolagsnamn,
            nuvarande_kurs,
            oms√§ttning_i_√•r,
            oms√§ttning_n√§sta_√•r,
            antal_aktier,
            ps1, ps2, ps3, ps4, ps5
        )
        st.success(f"{bolagsnamn} har sparats.")
        st.session_state["dummy"] = st.session_state.get("dummy", 0) + 1

# Funktion f√∂r att ber√§kna potentiell kurs
def ber√§kna_pot_kurs(oms√§ttning, aktier, ps):
    return (oms√§ttning / aktier) * ps if aktier > 0 else 0

bolag = h√§mta_alla_bolag()
st.header("üìà Registrerade bolag")

if bolag:
    tabell_data = []
    for rad in bolag:
        id, namn, kurs, oms_√•r, oms_n√§sta, aktier, ps1, ps2, ps3, ps4, ps5 = rad
        ps_medel = (ps1 + ps2 + ps3 + ps4 + ps5) / 5
        kurs_idag = ber√§kna_pot_kurs(oms_√•r, aktier, ps_medel)
        kurs_slut√•ret = ber√§kna_pot_kurs(oms_n√§sta, aktier, ps_medel)
        underv√§rdering = ((kurs_slut√•ret - kurs) / kurs) * 100 if kurs > 0 else 0

        tabell_data.append({
            "ID": id,
            "Bolag": namn,
            "Nuvarande kurs": kurs,
            "Potentiell kurs idag": round(kurs_idag, 2),
            "Potentiell kurs slut √•ret": round(kurs_slut√•ret, 2),
            "Underv√§rdering (%)": round(underv√§rdering, 2),
        })

    tabell_data.sort(key=lambda x: x["Underv√§rdering (%)"], reverse=True)

    st.dataframe(tabell_data, use_container_width=True)

    st.subheader("‚úèÔ∏è Redigera eller ta bort bolag")
    valt_bolag = st.selectbox("V√§lj bolag att redigera/ta bort", bolag, format_func=lambda x: x[1])

    if valt_bolag:
        with st.form("redigera_form"):
            ny_kurs = st.number_input("Ny kurs", value=valt_bolag[2])
            ny_oms_√•r = st.number_input("Ny oms√§ttning i √•r", value=valt_bolag[3])
            ny_oms_n√§sta = st.number_input("Ny oms√§ttning n√§sta √•r", value=valt_bolag[4])
            ny_aktier = st.number_input("Nytt antal aktier", value=valt_bolag[5])
            ny_ps = [st.number_input(f"P/S {i+1}", value=valt_bolag[6+i]) for i in range(5)]
            uppdatera = st.form_submit_button("Uppdatera")
            ta_bort = st.form_submit_button("Ta bort")

            if uppdatera:
                uppdatera_bolag(valt_bolag[0], ny_kurs, ny_oms_√•r, ny_oms_n√§sta, ny_aktier, *ny_ps)
                st.success("Bolaget har uppdaterats.")
                st.session_state["dummy"] = st.session_state.get("dummy", 0) + 1

            if ta_bort:
                ta_bort_bolag(valt_bolag[0])
                st.warning("Bolaget har tagits bort.")
                st.session_state["dummy"] = st.session_state.get("dummy", 0) + 1
else:
    st.info("Inga bolag √§r registrerade √§nnu.")
